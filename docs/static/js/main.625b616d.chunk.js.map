{"version":3,"sources":["util/API.js","routes/login/Login.js","routes/dashboard/Dashboard.js","routes/NotFound/NotFound.js","components/privateRoute/PrivateRoute.js","routes/settings/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","config","withCredentials","API","cb","axios","get","then","res","err","req","post","Login","useState","redirectToReferrer","setRedirectToReferrer","username","setUsername","password","setPassword","state","useLocation","to","from","className","onSubmit","event","preventDefault","status","console","log","htmlFor","id","type","value","onChange","e","target","Dashboard","history","useHistory","onClick","push","NotFound","PrivateRoute","children","rest","renderChildren","setRenderChildren","location","useEffect","pathname","render","Settings","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.625b616d.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? 'https://contractorsgarage.com' : 'http://localhost:3005';\r\nconst config = { withCredentials: true };\r\n\r\nexport const API = {\r\n    /**\r\n     * Checks if a user is currently logged in with a session.\r\n     * @param {Function} cb Callback function that returns response or error of the server request.\r\n     */\r\n    isLoggedIn: (cb) => {\r\n        axios.get(baseUrl + '/api/user/is-logged-in', config)\r\n        .then(res => {\r\n            cb(res);\r\n        }, err => {\r\n            cb(null, err);\r\n        });\r\n    },\r\n    /**\r\n     * Logs a user in and creates a session.\r\n     * @param {Object} req Request data with user credentials.\r\n     * @param {Function} cb Callback function that returns response or error of the server request.\r\n     */\r\n    logIn: (req, cb) => {\r\n        axios.post(baseUrl + '/api/user/login', req, config)\r\n        .then(cb, err => cb(null, err));\r\n    },\r\n    /**\r\n     * Logs a user out and destroys the current session.\r\n     * @param {Function} cb Callback function that returns response or error of the server request.\r\n     */\r\n    logOut: (cb) => {\r\n        axios.post(baseUrl + '/api/user/logout', null, config)\r\n        .then(cb, err => cb(null, err));\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { API } from '../../util/API';\r\nimport './Login.sass';\r\n\r\nconst Login = () => {\r\n  const [\r\n    redirectToReferrer,\r\n    setRedirectToReferrer\r\n  ] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { state } = useLocation();\r\n\r\n  if (redirectToReferrer === true) {\r\n    return <Redirect to={state?.from || '/dashboard'} />\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    API.logIn({ username, password }, (res, err) => {\r\n      if (res && res.status === 200) {\r\n        setRedirectToReferrer(true);\r\n      }\r\n      else {\r\n        console.log(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className='Login'>\r\n      <form onSubmit={handleLogin}>\r\n        <div className='mb-3'>\r\n          <label htmlFor='username' className='form-label'>Username</label>\r\n          <input\r\n            id='username'\r\n            className='form-control'\r\n            type='text'\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label htmlFor='password' className='form-label'>Password</label>\r\n          <input\r\n            id='password'\r\n            className='form-control'\r\n            type='password'\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}  \r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type='submit'>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { API } from '../../util/API';\r\nimport './Dashboard.sass';\r\n\r\nconst Dashboard = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        API.logOut((res, err) => {\r\n            if (res && res.status === 200) {\r\n                history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='Dashboard'>\r\n            Dashboard component works!!! With new changes\r\n            <button className=\"btn btn-danger\" onClick={handleLogout}>Logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './NotFound.sass';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className='NotFound'>\r\n            404 page not found!!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route, useLocation } from 'react-router-dom';\r\nimport { API } from '../../util/API';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [renderChildren, setRenderChildren] = useState();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        API.isLoggedIn((res, err) => {\r\n            if (res && res.status === 200) {\r\n                setRenderChildren(children);\r\n            } else {\r\n                setRenderChildren(<Redirect to={{\r\n                    pathname: '/',\r\n                    state: { from: location }\r\n                }}/>);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest} render={() => {\r\n            return renderChildren;\r\n        }}/>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport './Settings.sass';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className='Settings'>\r\n            Settings Component Works!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import './App.sass';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './routes/login/Login';\nimport Dashboard from './routes/dashboard/Dashboard';\nimport NotFound from './routes/NotFound/NotFound';\nimport PrivateRoute from './components/privateRoute/PrivateRoute';\nimport Settings from './routes/settings/Settings';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route\n            path='/'\n            exact\n            component={Login}\n          />\n          <PrivateRoute\n            path='/dashboard'\n            exact\n          >\n            <Dashboard/>\n          </PrivateRoute>\n          <PrivateRoute\n            path='/settings'\n            exact\n          >\n            <Settings/>\n          </PrivateRoute>\n          <Route\n            path='*'\n            exact\n            component={NotFound}\n          />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}