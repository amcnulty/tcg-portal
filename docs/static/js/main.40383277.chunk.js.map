{"version":3,"sources":["routes/login/Login.js","routes/dashboard/Dashboard.js","routes/NotFound/NotFound.js","util/API.js","components/privateRoute/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","redirectToReferrer","state","useLocation","to","from","className","Dashboard","NotFound","API","cb","axios","get","then","res","err","PrivateRoute","children","rest","renderChildren","setRenderChildren","location","useEffect","status","pathname","render","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wTA4BeA,EAxBD,WACV,MAGIC,oBAAS,GAHb,mBACEC,EADF,KAKQC,GALR,KAKkBC,cAAVD,OAQR,OAA2B,IAAvBD,EACK,cAAC,IAAD,CAAUG,IAAS,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,eAGlC,qBAAKC,UAAU,QAAf,kDCXOC,G,MARG,WACd,OACI,qBAAKD,UAAU,YAAf,6DCMOE,G,MARE,WACb,OACI,qBAAKF,UAAU,WAAf,qC,iCCHKG,EACG,SAACC,GACTC,IAAMC,IAAI,uDACTC,MAAK,SAAAC,GACFJ,EAAGI,MACJ,SAAAC,GACCL,EAAG,KAAMK,O,eCoBNC,EAxBM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,iBAC5C,EAA4ClB,qBAA5C,mBAAOmB,EAAP,KAAuBC,EAAvB,KACMC,EAAWlB,cAejB,OAbAmB,qBAAU,WACNb,GAAe,SAACK,EAAKC,GACbD,GAAsB,MAAfA,EAAIS,OACXH,EAAkBH,GAElBG,EAAkB,cAAC,IAAD,CAAUhB,GAAI,CAC5BoB,SAAU,IACVtB,MAAO,CAAEG,KAAMgB,YAI5B,IAGC,cAAC,IAAD,2BAAWH,GAAX,IAAiBO,OAAQ,WACrB,OAAON,OCWJO,MA3Bf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEqB,KAAK,IACLC,OAAK,EACLC,UAAW9B,IAEb,cAAC,EAAD,CACE4B,KAAK,aACLC,OAAK,EAFP,SAIE,cAAC,EAAD,MAEF,cAAC,IAAD,CACED,KAAK,IACLC,OAAK,EACLC,UAAWrB,YCdRsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.40383277.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport './Login.sass';\r\n\r\nconst Login = () => {\r\n    const [\r\n      redirectToReferrer,\r\n      setRedirectToReferrer\r\n    ] = useState(false);\r\n  \r\n    const { state } = useLocation();\r\n  \r\n    // Implement code for logging in then setting redirect to referrer to true\r\n    // so last page that was attempted to be visited unauthenticated will be redirected to.\r\n    // const login = () => fakeAuth.authenticate(() => {\r\n    //   setRedirectToReferrer(true)\r\n    // })\r\n  \r\n    if (redirectToReferrer === true) {\r\n      return <Redirect to={state?.from || '/dashboard'} />\r\n    }\r\n    return (\r\n        <div className='Login'>\r\n            Login Component Works!! With latest\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Dashboard.sass';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div className='Dashboard'>\r\n            Dashboard component works!!! With new changes\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './NotFound.sass';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className='NotFound'>\r\n            404 page not found!!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import axios from \"axios\"\r\n\r\nexport const API = {\r\n    isLoggedIn: (cb) => {\r\n        axios.get('https://contractorsgarage.com/api/user/is-logged-in')\r\n        .then(res => {\r\n            cb(res);\r\n        }, err => {\r\n            cb(null, err);\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route, useLocation } from 'react-router-dom';\r\nimport { API } from '../../util/API';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [renderChildren, setRenderChildren] = useState();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        API.isLoggedIn((res, err) => {\r\n            if (res && res.status === 200) {\r\n                setRenderChildren(children);\r\n            } else {\r\n                setRenderChildren(<Redirect to={{\r\n                    pathname: '/',\r\n                    state: { from: location }\r\n                }}/>);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest} render={() => {\r\n            return renderChildren;\r\n        }}/>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import './App.sass';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './routes/login/Login';\nimport Dashboard from './routes/dashboard/Dashboard';\nimport NotFound from './routes/NotFound/NotFound';\nimport PrivateRoute from './components/privateRoute/PrivateRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route\n            path='/'\n            exact\n            component={Login}\n          />\n          <PrivateRoute\n            path='/dashboard'\n            exact\n          >\n            <Dashboard/>\n          </PrivateRoute>\n          <Route\n            path='*'\n            exact\n            component={NotFound}\n          />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}